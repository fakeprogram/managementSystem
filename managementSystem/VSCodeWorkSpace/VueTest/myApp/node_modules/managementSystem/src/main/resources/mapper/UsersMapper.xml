<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.managementSystem.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.managementSystem.entity.Users">
    <id column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="department_id" jdbcType="INTEGER" property="department_id" />
    <result column="user_tel" jdbcType="VARCHAR" property="user_tel" />
    <result column="pass_word" jdbcType="VARCHAR" property="pass_word" />
    <result column="user_name" jdbcType="VARCHAR" property="user_name" />
    <result column="user_email" jdbcType="VARCHAR" property="user_email" />
    <result column="head" jdbcType="VARCHAR" property="head" />
    <result column="role_type" jdbcType="INTEGER" property="role_type" />
    <result column="user_status" jdbcType="INTEGER" property="user_status" />
    <result column="is_login" jdbcType="INTEGER" property="is_login" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="UserWithDepartment" type="com.example.managementSystem.entity.vo.UserWithDepartment">
    <result column="department_head" jdbcType="INTEGER" property="departmentHead" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
  </resultMap>
  <resultMap extends="UserWithDepartment" id="UserWithDepartmentAndAttendance" type="com.example.managementSystem.entity.vo.UserWithDepartmentAndAttendance">
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="lng" jdbcType="DECIMAL" property="lng" />
    <result column="lat" jdbcType="DECIMAL" property="lat" />
  </resultMap>
  <sql id="Base_Column_List">
    users.user_id, users.department_id, user_tel, pass_word, user_name, user_email, head, role_type,
    user_status, is_login
  </sql>
  <sql id="departmentInfo">
    department_head,department_name
  </sql>
  <sql id="AttendanceInfo">
    date,city,province,lng,lat
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where user_id = #{user_id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserTel" parameterType="java.lang.String" resultType="com.example.managementSystem.entity.Users">
    select
    <include refid="Base_Column_List" />
    from users
    where user_tel = #{user_tel,jdbcType=VARCHAR}
  </select>

  <!--获取今日已经打卡员工及其考勤数据-->
  <select id="getOutSideStaffAttendanceOfToday" parameterType="java.time.LocalDate" resultMap="UserWithDepartmentAndAttendance">
    select
    <include refid="Base_Column_List"/>,
    <include refid="departmentInfo"/>,
    <include refid="AttendanceInfo"/>
    from users left join department on users.department_id = department.department_id
    left join attendance on users.user_id=attendance.user_id
    where users.user_status =1 and attendance.date like concat(#{date},'%')
  </select>

  <!--获取所有在外人员-->
  <select id="getAllOutSideStaff" resultMap="UserWithDepartment">
    select
    <include refid="Base_Column_List"/>,
    <include refid="departmentInfo"/>
    from users left join department on users.department_id = department.department_id
    where users.user_status =1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where user_id = #{user_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="user_id" parameterType="com.example.managementSystem.entity.Users" useGeneratedKeys="true">
    insert into users (department_id, user_tel, pass_word, 
      user_name, user_email, head, 
      role_type, user_status, is_login
      )
    values (#{department_id,jdbcType=INTEGER}, #{user_tel,jdbcType=VARCHAR}, #{pass_word,jdbcType=VARCHAR}, 
      #{user_name,jdbcType=VARCHAR}, #{user_email,jdbcType=VARCHAR}, #{head,jdbcType=VARCHAR}, 
      #{role_type,jdbcType=INTEGER}, #{user_status,jdbcType=INTEGER}, #{is_login,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="user_id" parameterType="com.example.managementSystem.entity.Users" useGeneratedKeys="true">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="department_id != null">
            department_id,
        </if>
      <if test="user_tel != null">
        user_tel,
      </if>
      <if test="pass_word != null">
        pass_word,
      </if>
      <if test="user_name != null">
        user_name,
      </if>
      <if test="user_email != null">
        user_email,
      </if>
      <if test="head != null">
        head,
      </if>
      <if test="role_type != null">
        role_type,
      </if>
      <if test="user_status != null">
        user_status,
      </if>
      <if test="is_login != null">
        is_login,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="department_id != null">
        #{department_id,jdbcType=INTEGER},
      </if>
      <if test="user_tel != null">
        #{user_tel,jdbcType=VARCHAR},
      </if>
      <if test="pass_word != null">
        #{pass_word,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null">
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="user_email != null">
        #{user_email,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        #{head,jdbcType=VARCHAR},
      </if>
      <if test="role_type != null">
        #{role_type,jdbcType=INTEGER},
      </if>
      <if test="user_status != null">
        #{user_status,jdbcType=INTEGER},
      </if>
      <if test="is_login != null">
        #{is_login,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.managementSystem.entity.Users">
    update users
    <set>
      <if test="department_id != null">
        department_id = #{department_id,jdbcType=INTEGER},
      </if>
      <if test="user_tel != null">
        user_tel = #{user_tel,jdbcType=VARCHAR},
      </if>
      <if test="pass_word != null">
        pass_word = #{pass_word,jdbcType=VARCHAR},
      </if>
      <if test="user_name != null">
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="user_email != null">
        user_email = #{user_email,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        head = #{head,jdbcType=VARCHAR},
      </if>
      <if test="role_type != null">
        role_type = #{role_type,jdbcType=INTEGER},
      </if>
      <if test="user_status != null">
        user_status = #{user_status,jdbcType=INTEGER},
      </if>
      <if test="is_login != null">
        is_login = #{is_login,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.managementSystem.entity.Users">
    update users
    set department_id = #{department_id,jdbcType=INTEGER},
      user_tel = #{user_tel,jdbcType=VARCHAR},
      pass_word = #{pass_word,jdbcType=VARCHAR},
      user_name = #{user_name,jdbcType=VARCHAR},
      user_email = #{user_email,jdbcType=VARCHAR},
      head = #{head,jdbcType=VARCHAR},
      role_type = #{role_type,jdbcType=INTEGER},
      user_status = #{user_status,jdbcType=INTEGER},
      is_login = #{is_login,jdbcType=INTEGER}
    where user_id = #{user_id,jdbcType=INTEGER}
  </update>
</mapper>